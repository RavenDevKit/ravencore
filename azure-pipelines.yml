# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

resources:
- repo: self

variables:
  tag: '$(Build.BuildNumber)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Bash@3
      displayName: Setup OS requirements
      inputs:
        targetType: 'inline'
        script: |
          sudo apt-get -y remove docker docker-engine docker.io containerd runc
          sudo apt-get -y install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
          
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get -y install docker-ce docker-ce-cli containerd.io
          
          export DOCKER_BUILDKIT=1
          
          #docker build --platform=local -o . git://github.com/docker/buildx
    - task: DownloadGitHubRelease@0
      displayName: Download docker buildx release
      inputs:
        connection: 'github.com_cfrogjump'
        userRepository: 'docker/buildx'
        defaultVersionType: 'latest'
        itemPattern: 'buildx-*.linux-amd64'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: Bash@3
      displayName: Put buildx in the path
      inputs:
        targetType: 'inline'
        script: |
          ls $(System.ArtifactsDirectory)
          mkdir -p ~/.docker/cli-plugins
          mv $(System.ArtifactsDirectory)/buildx* ~/.docker/cli-plugins/docker-buildx
          docker run --rm --privileged docker/binfmt:820fdd95a9972a5308930a2bdfb8573dd4447ad3
          cat /proc/sys/fs/binfmt_misc/qemu-aarch64
    - task: Docker@2
      inputs:
        containerRegistry: 'dockerhub_cadecall'
        command: 'login'
    - task: Bash@3
      displayName: build docker images
      inputs:
        targetType: 'inline'
        script: |
          docker buildx build --push --platform linux/arm/v7,linux/amd64 --tag ravenproject/ravencore-api:latest .
#    - task: Docker@2
#      displayName: Build amd64 images
#      inputs:
#        containerRegistry: 'dockerhub_cadecall'
#        repository: 'ravenproject/ravencore-api'
#        command: 'buildAndPush'
#        Dockerfile: '**/Dockerfile.amd64'
#        tags: 'amd64-$(tag)'
    
#    - task: Docker@2
#      displayName: Build arm32v7 images
#      inputs:
#        containerRegistry: 'dockerhub_cadecall'
#        repository: 'ravenproject/ravencore-api'
#        command: 'buildAndPush'
#        Dockerfile: '**/Dockerfile.arm32v7'
#        tags: 'arm32v7-$(tag)'